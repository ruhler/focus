
# vim: ft=python

Import('env')

# inputtertest
inputter_o = env.Object('inputter.o', 'inputter.c')
inputtertest = env.Program('inputtertest', ['inputtertest.c', inputter_o], LIBS=['consoler'])
env.Default(env.Command('inputtertest.out', inputtertest, "$SOURCE > $TARGET"))

# screentest
screen_o = env.Object('screen.o', 'screen.c')
screentest = env.Program('screentest', ['screentest.c', screen_o])
env.Default(env.Command('screentest.out', screentest, "$SOURCE > $TARGET"))

# outputtertest
outputter_o = env.Object('outputter.o', 'outputter.c')
outputtertest = env.Program('outputtertest',
        ['outputtertest.c', outputter_o, screen_o])
env.Default(env.Command('outputtertest.out', outputtertest, "$SOURCE > $TARGET"))

# termer
termer = env.Program('termer',
    ['termer.c', 'client.c', 'display.c', inputter_o, outputter_o, screen_o],
    LIBS=['util', 'pthread', 'fonter', 'fontconfig', 'freetype', 'm', 'consoler'])
env.Default(termer)

# termfiller
termfiller = env.Program('termfiller', 'termfiller.c', LIBS=['curses'])
env.Default(termfiller)

# termertest
termertest = env.Program('termertest', 'termertest.c', LIBS=['consoler'])
testout = env.Command('termertest.out', [termertest, termer, termfiller],
    "$SOURCES > $TARGET")

# A profiling version of termer
env.Object('termer_prof.o', 'termer.c',
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'])
env.Object('client_prof.o', 'client.c',
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'])
env.Object('display_prof.o', 'display.c',
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'])
env.Object('inputter_prof.o', 'inputter.c',
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'])
env.Object('outputter_prof.o', 'outputter.c',
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'])
env.Object('screen_prof.o', 'screen.c',
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'])
env.Program('termer_prof',
    ['termer_prof.o', 'display_prof.o', 'client_prof.o', 'inputter_prof.o', 'outputter_prof.o', 'screen_prof.o'],
    LIBS=['util', 'pthread', 'fontconfig', 'freetype', 'm', 'fonter_prof', 'consoler_prof'],
    CFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage'],
    LINKFLAGS = ['-pg', '-fprofile-arcs', '-ftest-coverage']
    )
env.Command('gmon.out', ['runbench.sh', 'benchshell.sh', 'termer.bench', 'termer_prof'],
        "cd ${TARGET.dir} ; rm -f gmon.out *.gcda ../*/*.gcda ; ./${SOURCE.file}")
env.Command('termer.prof', ['gmon.out', 'termer_prof'],
        "cd ${SOURCE.dir} ; gprof termer_prof > ${TARGET.file}")

env['PROGRAMDOC']('termer')
env.Install("$PREFIX/bin", termer)

