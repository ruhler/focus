
Sun Apr  3 10:40:39 EDT 2011

Task: Milestone 3: elinks and png images

Milestone 3 is to be able to run elinks (without X) and be able to select a
png image as a link, and have it pop up a new window with the png image that I
can see. I can't currently do this with fbterm out of X, so this will be an
achievement.

Sat Apr  9 12:12:14 EDT 2011

I need the following working components for this milestone:

1. PNG viewer - I already have this
2. Terminal Emulator
3. Green with better control sequence
    I think I have green. I just need the better control sequences.

So, let me focus on the terminal emulator next. Termer.

Mon May 16 18:18:38 EDT 2011

Termer, while admittedly in need of a little work, is still useable, so let's
switch to the next task. (Though I fear my battery will run low pretty quickly
using this terminal.

Mon May 16 21:08:33 EDT 2011

It almost works! I can start termer and boxer, and multiple termers. And I can
switch between them with the number keys. This is cool.

What are the problems?
 - It would be nice if sgreen started a terminal or something by default, or
   had some key code to do it. That would make it easier to start programs in
   sgreen.
 - Obviously using the number keys is not sufficient, because I'll certainly
   want a way to enter numbers to the specific clients.
 - CPU is floored doing this.
    Why? What's taking up so much cpu? Why don't things sleep?
    Or is it doing that much work that it needs to take up lots of cpu?

Sun May 22 12:09:41 EDT 2011

Guess what! Performance problems have gone away. For, I think, all my consoler
applications. That means all that remains for milestone 3 is to fix up sgreen,
as described above.

I vote for ctrl-' for the control character. And initially support:

ctrl-' 0-9  - switch to window 0 through 9
ctrl-' c    - create a new window with an instance of termer running.

And when we first start, start with termer running.
Termer should be running a login shell? Or the shell from $SHELL, or looked up
by user, or something like that.

Termer should maybe figure out the desired font (and font size) from an
environment variable: TERMERFONT. I can add that to my bashrc. Do this until I
figure out a better way? The better way being: read it from a .termerrc file.
And maybe CONSOLER_WIDTH and CONSOLER_HEIGHT can be used as environment
variables for conveying that information to consoler clients, as a sort of
hack for now. I can set that in my bashrc file (or have sdlcsr set it
automatically).

Oh boy. This is exciting. Just a number of easy little details to take care
of, and I'll have niftily working system.

I'm so going to do this today. But now I think would be a good time for a
short break.

Sun May 22 13:02:14 EDT 2011

Here are the details to take care of:

+ Remove sdl termer back end, as the ctermer has fine performance now.
    done.
+ enable keyrepeat in sdlcsr
    done.
- Get font size from fontconfig (so it comes from font name)
    size in the fontconfig gives a point size.
    pixelsize gives a pixelsize. Let me play with fontconfiger to see what it
    tells me for both of those. pixelsize should be just fine. Both doubles.

    They are both the sameish, except pixelsize is a little bigger.
    I'm thinking using pixelsize and the same set pixels sizes function I have
    now makes sense. That way I don't have to deal with dpi things.

- Get font name from TERMERFONT environment variable.
- Write CNSL_GetGeometry function to get width and height
    Reads from CNSLWIDTH and CNSLHEIGHT environment variables.
    So sdlcsr should set those variable when it starts up.
- Parse cntrl-' escape sequences in sgreen.
- Have sgreen start by launching termer.
- Make termer use login shell (or whatever is approriate (what does xterm do?
  screen?)) by default rather than bench. And I think I can get rid of bench
  now.
- Work out issues with /tmp/green file. Maybe use an environment variable like
  screen does: SGREEN

And after all that: Start using it. Work out any remaining issues.
This should be fun. Let me get started.


