
Thu Apr 28 14:46:44 EDT 2011

Task: Make a pdf viewer that uses the focus framework.

This should be relatively simple. The goal is a minimal pdf viewer that I can
use to give presentations from a computer without X11 installed.

I can steal everything from gylf. That is, we use poppler to draw to a cairo
surface, we copy that to our display buffer and update it and all that.

For the first version no need to display page numbers or have a textline or a
tcl interpreter. Though, come to think of it, I could have a tcl interpreter
if I wanted...

No, add that later. Start with the usual keybindings, focusing again for
presentations. I suggest for the first set:
- scroll: up, down, left, right
- zoom: in, out, width, page
- goto: next, previous
- quit

Should be plenty for a simple presentation.

I can just have a main loop which reads key inputs, processes them, then
updates the display.

Thu Apr 28 16:36:10 EDT 2011

Hey! It works! And it only took a little more than an hour. That's pretty
nifty. It feels more responsive than gylf usually does too, which is cool.

Fri Apr 29 14:11:12 EDT 2011

I downloaded a later version of poppler to try on pacific. It looks like there
is a new cpp interface. Now the interface has no documentation, but I'd like
to try switching over to it. Let's see how hard that is.

I want the following functionality:
 + load a document given a filename
 - draw a given page and zoom setting to a cairo surface.
 + get the number of pages
 - get the media width for a page
 - get the media height for a page

I can ignore highlighting and searching for now.

Here's what I see available via the new poppler cpp interface:

poppler-document.h: 
  poppler::document::load_from_file - for loading
  poppler::document::pages() - for number of pages
  poppler::document::create_page() - to get a page
  poppler::page:page_rect - to get page dimensions?
  poppler::page_renderer::render_page - to draw the page with zoom.
  poppler::image::width
  poppler::image::height
  poppler::image::data

Interesting. So it looks like I may not need to reference cairo at all? Perhaps I just load the document, get the page, render the page to one of poppler's images, then copy the data from there.

That's pretty nice. I'll have to change things just a bit. How about, dump my Document.cpp class, switch over entirely to this cpp interface.

Still don't know about memory management. Hopefully things will work out?

I should do this work on greenfield, not pacific. Let me do that.
 
Fri Apr 29 14:53:39 EDT 2011

Well, it seems to be working. It just looks funny (fonts not drawn so good)
and is rather slow to render.

Tue May  3 08:39:07 EDT 2011

pdfer has problems, as I discovered when using it to do a presentation.
 - zoom width, zoom page, zoom in and zoom out no longer seem to work
    (must be getting a funny width back from the document)
 - It's really slow
 - Window size should not be compiled in statically: we should at least be
   able to say when we run the thing what window size to use.
 - Quality of rendering is really bad. Why aren't we using the cairo engine?

The zoom troubles I should be able to capture in a test case. For example,
using my colors pdf, zoom width, then verify left and right edges are the
color, and that if I move left or right, then the left and right edges become
no longer the color.

Or I could draw a pdf with a border a special color, then just check the edge
is the border color.

Tue May  3 09:04:07 EDT 2011

I think I know the trouble. That is, the reason I don't feel like writing a
test. I need pdfer to be more like a library. It should be a library for
manipulating a console client display. You have some pdf document, and you can
apply functions to it to cause a display to be updated. Then I can test those
functions, independent of keys and such? Err...

So, for example, we should have the following things:

Pdfer - type representing a pdf document and view.
load - create a new Pdfer from the given file.
display - display the current view to a CNSL_Display
next, prev, goto, scroll, zoom, width, page

What do you think? I think it sounds reasonable. Then it will be easier to
test, and easier to change keybindings, and interface, and stuff like that.

But I, err, still don't feel like doing this right now.

Tue May  3 09:17:50 EDT 2011

I looked into poppler. When using the cpp interface it uses Splash. That
probably explains the terrible rendering and poor performance. Looks like I
can't get around it. I have to hack the thing to use cairo.

But I know how to do it, so maybe I can just make a patch (and submit it to
poppler?)


