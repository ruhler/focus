
Sun May 22 15:42:02 EDT 2011

Task: I need a milestone 4.

I'm not sure what it should be yet. I'm thinking maybe it should just be:
start using focus wherever I can. Make the default. Fix all the little odds
and ends that come up.

Things like:
 - sgreen has no way to view the active windows
 - sgreen should add a way to kill windows
 - sgreen maybe should have a split feature
    For this to work, I'll probably want a resize event.
    Other than that, I don't think it will be too hard. I just need to add
    state which is: how the screen is split, which client is in each window,
    and which window has input focus. When I receive output from a client,
    update each window which is showing that client.
 - termer doesn't handle everything elinks (not under screen) spits at it
 - pdfer should have a goto command
 - pdfer should have a way to show the number of pages in the document
 - pdfer should have a way to show the number of the current page
 - termer implement underline, italics
    I might note, the font I use has an italics version. So maybe we could do
    italics by choosing an appropriate font. Underline should be easy: just
    draw the line manually.
 - termer support of dynamic font resizing?
 - tk server
 - gtk server?
 - release source code
 - rewrite sgreen to be better
 - implement a remote client server
 - make a nice installer
 - figure out how to make a clean termination of clients
 - termer support for mode sequences with more than 2 parameters
 - turn consoler into a library
 - write man pages for everything
 - profile termer and make it more efficient (save battery life)
 - use buffered io for passing events? May help noticable performance issue?
    The issue being: it takes a long time before keyrepeat kicks in, then in
    kicks in hard. But then, maybe this is more a problem with the chosen key
    repeat parameters. Or maybe this is more a problem with scrolling the
    display.
 + pdfer has a bug: fit width doesn't work right.
    Or maybe it was a problem with loading the right library?
    No, it's the following width thing:
 - pdfer fitwidth doesn't keep part of page at the top in the same place.
    So in some cases, it moves the page totally out of view, which is
    annoying. I suggest what we want is to zoom around the top of the page. So
    whatever pixels are at the top of the page before fitting to the width
    should remain at the top of the page after fitting to the width.

    How can I test this? Use a solid color pdf. We know the background color.
    Position the page so that row 2 is background color, row 4 is page color.
    Then fit width, verify row 2 is background color, row 4 is page color?
    Hmm... Not sure how to test this.

    I fixed the problem without testing. GAR! What a waste! Why didn't I write
    a test case for this?

    Maybe a test case could be: fit all (so top of page is at the top), fit
    width (top of page should still be at the top), scroll down 10%, now the
    top of the page should have changed. Verify it changed color.

 - what if sgreen can't find 'termer' in path?
 - cgreen should pass along current working directory to sgreen?
    (green_cwdbug.tsk)
    

 - sgreen should maybe blank a clients display when it quits so we don't see
   it when we start a new client with the same id.
 - pdfer needs a search capability
 - some unicode characters don't work
    Like for drawing boxes and such (try alsamixer for example).
    But it's very strange, because if I start a new termer, it works fine, but
    the original one launched from sgreen doesn't? What's with that?

    Oh, it's that, in screen it doesn't work, not in screen it does.
    When it doesn't work, we have characters such as: ─(2500) and ┘(2518).
    Now I have something I can work with. Question is, where do I get these
    from? What font has them, and how should I know to load the font?

    I notice the following:
    1. fontconfig has a way to match based on charset, so I suppose, in
    theory, if I find a character not in my font, I can match another font
    that has it.
    2. The non-bold versions of my Dejavu font do define those box drawing
    characters.

    So here's what I think I should do. Update fontconfiger to search for
    character 2500 and see what it returns. If it works usefully, then do as
    proposed in (1). Have a bunch of faces loaded, and try them all before
    giving up? Or something like that.
    

 - is LaunchClient a memory leak? Or just in sgreen where I never free it?
 - sgreen/cgreen should be reentrant. That is, allow sgreen within sgreen.
 - on losaltos, touching the touchpad appears to crash sdlcsr (and then we
   strand all the clients running at like full cpu).
 - filler should use the whole screen (and remember to update the man page)
 - ditto with boxer: it should use the whole screen.

