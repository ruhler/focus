
Wed Jun  8 21:35:24 EDT 2011

Task: Release 1.0.0

I'm going to attempt to start a release cycle like thing described in m4.tsk.
This task should define what will go into release 1.0.0.

The components are:
  + consoler library (8.tsk)
  + fonter library (3.tsk)
  + boxer cnsl application (5.tsk)
  + filler cnsl application (6.tsk)
  + green cnsl application (sgreen, cgreen) (10.tsk)
    include status bar
    do not include split capability
  + pdfer cnsl application (11.tsk)
    include more key bindings like: page down/page up
    do not include search capability
  + pnger cnsl application (9.tsk)
  + termer cnsl application (12.tsk)
  + sdlcsr application (7.tsk)

Other things include:
  nice configure like installer (2.tsk)

I'm not including things like fontconfiger, freetyper. Those are more of
researchy like tools. I'm not including kmapper, which should be pushed out to
1.1.0. I'm not including flicker, which is really useless right now, unless I
want to do performance stuff, but I don't for this release, so skip it. Code
that isn't part of the above list should be removed. I can always get it back
with git later if needed (and I remember what it was).

I will not make major changes to the interfaces. The goal of this release is
to do as little as I can to make a nice release. So, do improve the code a
bit, but if I have to make substantial changes to improve the code, put that
off to another release.

Let me spawn off some tasks for detailing what features will and will not be
included in each of these components.

I get the feeling I have lots of thinking and documenting to do before I start
writing code again. Oh well. Hopefully I'll produce something I'm proud of.

Thu Jun  9 22:38:47 EDT 2011

I think I'm now clear on all the functionality I want for the release. I'm
scaling back. Primary goal is to get the release out, not add more features.
Though in a couple places I am adding things, but those should be not too hard
and well worth it.

Next step is documentation. I'm thinking don't worry about man pages yet.
Start with a more subject based description of things in my dtcl format.

Directory structure. I should figure that out. Put each component in its own
directory. That directory should include all files relevant for that
component: source code, test code, and documentation. Let me do it like that
rather than have src, test and doc top level directories. The doc directory
will refer to development documentation, not source for user documentation.

Good! I suppose the order that makes sense to go in build wise would be
consoler first, but that's really the hardest thing to describe...

Okay. Let's do it. I propose the following order for implementing the
components: well, just the same order as above.

Cool. Nifty. Time to get started.

Um, I'm thinking for the first pass I'll write the documentation in plain text
files. But to be clear, for release 1.0.0, I should produce man pages and nice
texinfo documents for everything. That's very important.

Fri Jun 10 00:01:42 EDT 2011

I have to go to bed now, but I'm making great progress. I think the consoler
api is getting cleaned up nicely now too. Cool. This is exciting.

Sat Jun 11 00:16:37 EDT 2011

I got the consoler library fixed up real nice. What's next? How about fonter?

Sat Jun 11 21:14:33 EDT 2011

I've gone through all the applications, moved them to their own directories,
reviewed some code, cleaned up some stuff, written a first stab at
documentation in plain text format.

I have not done much testing of the changes I wrote. Those things should be
captured by automated test cases. Meaning, I think if I run the code as it is
I'll run into a number of bugs pretty quickly. I should capture these in test
cases and fix them.

Given the state of things, what is left before I can release 1.0.0?

- fix enough bugs to make it usable.
I can't fix all the bugs. Then I would never release. Just fix those bugs
which keep it from being useable. Record all the rest, those can be part of
the target for 1.0.1.

- a nice installer configurator thing.
- man pages for everything.
- texinfo docs for everything.
- choice and application of license

So I think here's the deal. I'll install the code as it is now for release
1.0.0. I'll work under it to do the installer, man pages, texinfo, and license
things. If I can do all that, then enough of the bugs have been worked out for
the first release. The installer and documentation stuff is not going to be
trivial to get going. They will involve a bunch of thought and design. Be
patient.

I should also start collecting bug and feature requests for the next release.

